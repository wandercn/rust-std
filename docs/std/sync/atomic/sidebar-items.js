initSidebarItems({"constant":[["ATOMIC_BOOL_INIT","[`AtomicBool`] 初始化为 `false`。"],["ATOMIC_I16_INIT","初始化为 `0` 的原子整数。"],["ATOMIC_I32_INIT","初始化为 `0` 的原子整数。"],["ATOMIC_I64_INIT","初始化为 `0` 的原子整数。"],["ATOMIC_I8_INIT","初始化为 `0` 的原子整数。"],["ATOMIC_ISIZE_INIT","初始化为 `0` 的原子整数。"],["ATOMIC_U16_INIT","初始化为 `0` 的原子整数。"],["ATOMIC_U32_INIT","初始化为 `0` 的原子整数。"],["ATOMIC_U64_INIT","初始化为 `0` 的原子整数。"],["ATOMIC_U8_INIT","初始化为 `0` 的原子整数。"],["ATOMIC_USIZE_INIT","初始化为 `0` 的原子整数。"]],"enum":[["Ordering","原子内存顺序"]],"fn":[["compiler_fence","编译器内存防护。"],["fence","原子 fence。"],["spin_loop_hint","向处理器发出信号，通知它处于忙于等待的自旋循环 (自旋锁) 中。"]],"struct":[["AtomicBool","可以在线程之间安全共享的布尔类型。"],["AtomicI16","可以在线程之间安全共享的整数类型。"],["AtomicI32","可以在线程之间安全共享的整数类型。"],["AtomicI64","可以在线程之间安全共享的整数类型。"],["AtomicI8","可以在线程之间安全共享的整数类型。"],["AtomicIsize","可以在线程之间安全共享的整数类型。"],["AtomicPtr","可以在线程之间安全共享的裸指针类型。"],["AtomicU16","可以在线程之间安全共享的整数类型。"],["AtomicU32","可以在线程之间安全共享的整数类型。"],["AtomicU64","可以在线程之间安全共享的整数类型。"],["AtomicU8","可以在线程之间安全共享的整数类型。"],["AtomicUsize","可以在线程之间安全共享的整数类型。"]]});