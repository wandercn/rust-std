initSidebarItems({"keyword":[["SelfTy","`trait` 或 `impl` 块中的实现类型，或类型定义中的当前类型。"],["as","在类型之间进行转换，或重命名导入。"],["async","返回 `Future`，而不是阻塞当前线程。"],["await","暂停执行，直到 `Future` 的结果准备就绪为止。"],["break","从循环中提前退出。"],["const","编译时常量和编译时可评估函数。"],["continue","跳到循环的下一个迭代。"],["crate","Rust 二进制或库。"],["dyn","`dyn` 是 [trait 对象] 类型的前缀。"],["else","`if` 条件评估为 `false` 时要评估的表达式。"],["enum","可以是几个成员中任何一个的类型。"],["extern","链接到或导入外部代码。"],["false","[`bool`] 类型的值，表示逻辑 false。"],["fn","一个函数或函数指针。"],["for","使用 `in` 进行迭代，使用 `impl` 或 higher-ranked trait bounds (`for<'a>`) 实现 trait。"],["if","如果条件成立，则评估一个块。"],["impl","为类型实现一些功能。"],["in","使用 `for` 迭代一系列值。"],["let","将值绑定到变量。"],["loop","无限循环。"],["match","基于模式匹配的控制流。"],["mod","将代码整理到 模块 中。"],["move","按值捕获 闭包 的环境。"],["mut","可变变量，引用或指针。"],["pub","使一个项目对其他人可见。"],["ref","在模式匹配期间由引用绑定。"],["return","从函数返回值。"],["self","方法的接收者，或当前模块。"],["static","静态项是在程序的整个持续时间 (`'static` 生命周期) 内有效的值。"],["struct","由其他类型组成的类型。"],["super","当前 模块 的父级。"],["trait","一组类型的通用接口。"],["true","[`bool`] 类型的值，表示逻辑 `true`。"],["type","为现有类型定义别名。"],["union","Rust 等价于 c 风格的 union。"],["unsafe","memory safety 不能由类型系统验证的代码或接口。"],["use","从其他 crates 或模块导入或重命名项。"],["where","添加使用项必须坚持的约束。"],["while","保持条件时循环播放。"]],"macro":[["assert","声明在运行时布尔表达式为 `true`。"],["assert_eq","断言两个表达式彼此相等 (使用 [`PartialEq`])。"],["assert_ne","断言两个表达式彼此不相等 (使用 [`PartialEq`])。"],["cfg","在编译时评估配置标志的布尔组合。"],["column","扩展到调用它的列号。"],["compile_error","导致编译失败，并遇到给定的错误消息。"],["concat","将字面量串联成一个静态字符串切片。"],["concat_idents","将标识符串联为一个标识符。"],["dbg","打印并返回给定表达式的值，以进行快速而肮脏的调试。"],["debug_assert","声明在运行时布尔表达式为 `true`。"],["debug_assert_eq","断言两个表达式彼此相等。"],["debug_assert_ne","断言两个表达式彼此不相等。"],["env","在编译时检查环境变量。"],["eprint","打印到标准错误。"],["eprintln","用换行符打印到标准错误。"],["file","扩展为调用该文件的文件名。"],["format","使用运行时表达式的插值创建 `String`。"],["format_args","构造其他字符串格式宏的参数。"],["format_args_nl","与 `format_args` 相同，但最后添加一个换行符。"],["include","根据上下文将文件解析为表达式或项。"],["include_bytes","包含一个文件作为对字节数组的引用。"],["include_str","包含 UTF-8 编码的文件作为字符串。"],["is_aarch64_feature_detected","如果在 `aarch64` 目标以外的其他地方使用 `is_aarch64_feature_detected`，则阻止编译。"],["is_arm_feature_detected","如果在 `ARM` 目标以外的其他地方使用 `is_arm_feature_detected`，则阻止编译。"],["is_mips64_feature_detected","如果在 `MIPS64` 目标以外的其他地方使用 `is_mips64_feature_detected`，则阻止编译。"],["is_mips_feature_detected","如果在 `MIPS` 目标以外的其他地方使用 `is_mips_feature_detected`，则阻止编译。"],["is_powerpc64_feature_detected","如果在 `PowerPC64` 目标以外的其他地方使用 `is_powerpc64_feature_detected`，则阻止编译。"],["is_powerpc_feature_detected","如果在 `PowerPC` 目标以外的其他地方使用 `is_powerpc_feature_detected`，则阻止编译。"],["is_x86_feature_detected","一个在 运行时 测试 x86/x86-64 平台上是否具有 CPU 功能的宏。"],["line","扩展为在其上被调用的行号。"],["llvm_asm","LLVM 样式的内联汇编。"],["log_syntax","将传递的 tokens 打印到标准输出中。"],["matches","返回给定表达式是否与任何给定模式匹配。"],["module_path","扩展为代表当前模块路径的字符串。"],["option_env","(可选) 在编译时检查环境变量。"],["panic","Panics 当前线程。"],["print","打印到标准输出。"],["println","用换行符打印到标准输出。"],["stringify","对其参数进行字符串化。"],["thread_local","声明一个新的 `std::thread::LocalKey` 类型的线程本地存储密钥。"],["todo","表示未完成的代码。"],["trace_macros","启用或禁用用于调试其他宏的跟踪功能。"],["try","解开结果或传播其错误。"],["unimplemented","通过恐慌并带有 “not implemented” 消息来指示未实现的代码。"],["unreachable","表示无法访问的代码。"],["vec","创建一个包含参数的 `Vec`。"],["write","将格式化的数据写入缓冲区。"],["writeln","将格式化的数据写入缓冲区，并附加换行符。"]],"mod":[["alloc","内存分配 API。"],["any","该模块实现了 `Any` trait，它可以通过运行时反射来动态键入任何 `'static` 类型。"],["array","固定长度数组的辅助函数和类型。"],["ascii","对 ASCII 字符串和字符的操作。"],["assert_matches","Unstable 模块包含不稳定的 `assert_matches` 宏。"],["backtrace","支持捕获 OS 线程的栈回溯"],["borrow","用于处理借用数据的模块。"],["boxed","堆分配的指针类型。"],["cell","可共享的可变容器。"],["char","一个字符类型。"],["clone","不能隐式复制的类型的 `Clone` trait。"],["cmp","排序和比较的功能。"],["collections","集合类型。"],["convert","Traits 用于类型之间的转换。"],["default","`Default` trait 用于可能具有有意义的默认值的类型。"],["env","检查和操作进程的环境。"],["error","Traits 用于处理错误。"],["f32","`f32` 单精度浮点类型专用的常量。"],["f64","`f64` 双精度浮点类型专用的常量。"],["ffi","与 FFI 绑定有关的实用工具。"],["fmt","用于格式化和打印 `String`s 的实用工具。"],["fs","文件系统操纵操作。"],["future","异步值。"],["hash","通用哈希支持。"],["hint","对编译器的提示，该提示会影响应如何发出或优化代码。 提示可能是编译时或运行时。"],["i128","128 位有符号整数类型的常量。"],["i16","16 位带符号整数类型的常量。"],["i32","32 位带符号整数类型的常量。"],["i64","64 位有符号整数类型的常量。"],["i8","8 位带符号整数类型的常量。"],["intrinsics","编译器内联函数。"],["io","core I/O 功能的 Traits，助手和类型定义。"],["isize","指针大小的有符号整数类型的常量。"],["iter","可组合的外部迭代。"],["lazy","惰性值和静态数据的一次性初始化。"],["marker","原始 traits 和类型表示类型的基本属性。"],["mem","处理内存的基本函数。"],["net","TCP/UDP 通信的网络原语。"],["num","数字的附加功能。"],["ops","可重载的运算符。"],["option","可选值。"],["os","特定于操作系统的功能。"],["panic","标准库中的 Panic 支持。"],["path","跨平台路径操纵。"],["pin","键入将数据固定到其在内存中的位置的类型。"],["prelude","Rust Prelude"],["primitive","此模块重导出基本类型，以允许其他声明的类型不可能掩盖的用法。"],["process","用于处理进程的模块。"],["ptr","通过裸指针手动管理内存。"],["rc","单线程引用计数指针。`Rc` 代表引用计数。"],["result","`Result` 类型的错误处理。"],["slice","动态大小的视图到一个连续的序列， `[T]`."],["str","Unicode 字符串片。"],["stream","可组合的异步迭代。"],["string","一个 UTF-8 编码的可增长字符串。"],["sync","有用的同步原语。"],["task","类型和 Traits 用于处理异步任务。"],["thread","原生线程。"],["time","时间量化。"],["u128","128 位无符号整数类型的常量。"],["u16","16 位无符号整数类型的常量。"],["u32","32 位无符号整数类型的常量。"],["u64","64 位无符号整数类型的常量。"],["u8","8 位无符号整数类型的常量。"],["usize","指针大小的无符号整数类型的常量。"],["vec","具有堆已分配内容的连续可增长数组类型，写为 `Vec<T>`。"]],"primitive":[["array","一个固定大小的数组，表示为 `[T; N]`，用于元素类型 `T` 和非负编译时常量大小， `N`."],["bool","布尔类型。"],["char","一个字符类型。"],["f32","32 位浮点类型 (特别是 IEEE 754-2008 中定义的 “binary32” 类型)。"],["f64","64 位浮点类型 (特别是 IEEE 754-2008 中定义的 “binary64” 类型)。"],["fn","函数指针，例如 `fn(usize) -> bool`。"],["i128","128 位带符号整数类型。"],["i16","16 位带符号整数类型。"],["i32","32 位带符号整数类型。"],["i64","64 位带符号整数类型。"],["i8","8 位带符号整数类型。"],["isize","指针大小的有符号整数类型。"],["never","`!` 类型，也称为 “never”。"],["pointer","原始，不安全的指针 `*const T` 和 `* mut T`。"],["reference","引用，共享和可变。"],["slice","动态大小的视图到一个连续的序列， `[T]`. 这里的连续意味着元素的布局应使每个元素与其相邻元素之间的距离相同。"],["str","字符串片。"],["tuple","有限的异质序列， `(T, U, ..)`."],["u128","128 位无符号整数类型。"],["u16","16 位无符号整数类型。"],["u32","32 位无符号整数类型。"],["u64","64 位无符号整数类型。"],["u8","8 位无符号整数类型。"],["unit","`()` 类型，也称为 “unit”。"],["usize","指针大小的无符号整数类型。"]]});